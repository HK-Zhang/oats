//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using HtmlAgilityPack;
using System.Text.RegularExpressions;

public class SinaHtmlParser : IParser<Stock>
{
    private HtmlDocument doc = new HtmlDocument();
    private HtmlDocument tddoc = new HtmlDocument();
    private const string PATTERN = @"\(\d*\)"; 

	public virtual void ReadFromPool()
	{
        string html = "";

        try
        {
            while ((html = DataPool.Pop()) != DataPool.ENDOFQUEUE)
            {
                doc.LoadHtml(html);
                HtmlNode node = doc.GetElementbyId("FundHoldSharesTable");
                if (node == null) {
                    continue;
                }

                string code = node.SelectSingleNode("//title").InnerText;
                MatchCollection mc = Regex.Matches(code, PATTERN);
                code = mc[0].ToString().Substring(1, 6);

                doc.LoadHtml(node.OuterHtml);
                HtmlNodeCollection trNodes = node.SelectNodes("//tr");
                for(int i=2; i<trNodes.Count;i++){
                    Stock sh = ParseHtml(trNodes[i].OuterHtml);
                    sh.StockCode = code;
                    SyncContext.StockQ.Enqueue(sh);
                }


            }
        }
        catch (Exception ex)
        {
            OutputHelper.Output("Build Stock History Object failed: " + ex.Message);
        }
	}

    public virtual Stock ParseHtml(string htmlText)
	{
        Stock sh = new Stock();

        tddoc.LoadHtml(htmlText);
        HtmlNodeCollection tdNodes = tddoc.DocumentNode.SelectNodes("//td/div");
        sh.TransactionDate =DateTime.Parse(tdNodes[0].InnerText.Trim());
        sh.OpenPrice = double.Parse(tdNodes[1].InnerText.Trim());
        sh.TodayHigh = double.Parse(tdNodes[2].InnerText.Trim());
        sh.LatestPrice = double.Parse(tdNodes[3].InnerText.Trim());
        sh.TodayLow = double.Parse(tdNodes[4].InnerText.Trim());
        sh.Volume = double.Parse(tdNodes[5].InnerText.Trim());
        sh.Value = double.Parse(tdNodes[6].InnerText.Trim());

        return sh;
	}

}

