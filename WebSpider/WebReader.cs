//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading;


public class WebReader : IReader
{
	public virtual string ReadHTML(string URL)
	{

        WebRequest req = null;
        //WebResponse result = null;
        //string resultstring="";

        try
        {
            req = WebRequest.Create(URL);
            //result = req.GetResponse();
            //Stream ReceiveStream = result.GetResponseStream();

            ////read the stream into a string
            //StreamReader sr = new StreamReader(ReceiveStream,Encoding.UTF8);
            
            //resultstring = sr.ReadToEnd();

            SyncContext.ThreadQ.Enqueue(Thread.CurrentThread.ManagedThreadId);
            req.BeginGetResponse(ProcessWebResponse, req);  

        }
        catch (Exception exp)
        {
            OutputHelper.Output("Request failed. Reason:");
            OutputHelper.Output(URL + ":" + exp.Message);
        }
        //finally
        //{
        //    if (result != null)
        //    {
        //        result.Close();
        //    }
            
        //}


        //return resultstring;
        return string.Empty;
	}

	public virtual void ReadIntoPool(string htmlText)
	{
        DataPool.Push(htmlText);
	}

    public virtual void ProcessWebResponse(IAsyncResult result)
    {
        //read the stream into a string
        //OutputHelper.Output("ProcessWebResponse Thread: " + Thread.CurrentThread.ManagedThreadId.ToString() + " Start to run!");

        try
        {
            WebRequest webrequest = (WebRequest)result.AsyncState;
            using (WebResponse webresponse = webrequest.EndGetResponse(result))
            {
                Stream ReceiveStream = webresponse.GetResponseStream();
                StreamReader sr = new StreamReader(ReceiveStream, Encoding.UTF8);
                string resultstring = sr.ReadToEnd();
                ReadIntoPool(resultstring);
            }
        }
        catch (Exception ex)
        {
            
            OutputHelper.Output("ProcessWebResponse failed: "+ ex.Message);
        }

        SyncContext.ThreadQ.Dequeue();

        //OutputHelper.Output("ProcessWebResponse completed.");
    }

	public virtual void Run()
	{
        string url;
        OutputHelper.Output("Thread of Reading URL: " + Thread.CurrentThread.ManagedThreadId.ToString() + " Start to run!");

        SyncContext.ThreadQ.Enqueue(Thread.CurrentThread.ManagedThreadId);
        while ((url=URLPool.Pop()) != URLPool.ENDOFQUEUE) 
        {
            //ReadIntoPool(ReadHTML(url));
            ReadHTML(url);
        }
        SyncContext.ThreadQ.Dequeue();

        OutputHelper.Output("Thread of Reading URL completed.");

	}

}

